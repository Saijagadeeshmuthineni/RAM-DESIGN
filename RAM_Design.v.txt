module synchronous_ram #(
    parameter DATA_WIDTH = 8,
    parameter ADDR_WIDTH = 4 
) (
    input wire clk,              
    input wire rst,             
    input wire write_enable, 
    input wire read_enable, 
    input wire [ADDR_WIDTH-1:0] address,
    input wire [DATA_WIDTH-1:0] write_data,
    output reg [DATA_WIDTH-1:0] read_data   
);
    reg [DATA_WIDTH-1:0] ram [2**ADDR_WIDTH-1:0];
    always @(posedge clk) begin
        if (rst) begin
            integer i;
            for (i = 0; i < 2**ADDR_WIDTH; i = i + 1) begin
                ram[i] <= 0;
            end
        end else if (write_enable) begin
            ram[address] <= write_data;
        end
    end
    always @(posedge clk) begin
        if (read_enable) begin
            read_data <= ram[address]; 
        end
    end

endmodule
